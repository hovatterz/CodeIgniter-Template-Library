This is my take on a template library for CodeIgniter. I've been using it for a while now, and I think I'm happy enough with it to share it. You can do things like add title segments, javascript/css includes, and configure a lot of things.

I've documented the files a bit, but if there are any questions feel free to ask. 

This library assumes your assets layout is something like this:

    _assets
        css
        js
        img

Should be easy enough to figure out how to change if that's not the case. Here is an extremely basic example of how you could use this library: 

    class About extends CI_Controller
    {
        public function __construct()
        {
            parent::__construct();
    
            $this->template
                ->add_title_segment('About Us')
                ->add_javascript('jquery.js')
                ->add_stylesheet('screen.js');
        }

        public function index()
        {
            $this->template
                ->add_title_segment('Overview')
                ->build('about/index');
        }
    }

Ideally, you would have a base controller for including things like the jQuery library and your screen.css file, but I was trying to keep the example brief. Here is an example template file:

    <!DOCTYPE html>
    <html>
	    <head>
		    <meta charset="UTF-8" />
		
		    <title><?php echo $title; ?></title>

		    <?php echo $stylesheets; ?>
	    </head>
	
	    <body>
		    <div id="container">
			    <?php echo $content; ?>
		    </div>
		
		    <?php echo $javascripts; ?>
	    </body>
    </html>

TODO:

* Make config/template.php not required
* Meta tag functionality

Enjoy, and feel free to <a href="mailto:zackhovatter@gmail.com">email me</a> if you have any questions. Below you will find the full files.
* * *

libraries/Template.php

	<?php if (!defined('BASEPATH')) exit('No direct script access allowed');

	/**
	 * Template class
	 *
	 * @author Zack Hovatter
	 */
	class Template
	{
		private $_CI;
	
		private $_base_title;
		private $_body_classes = array();
		private $_javascripts = array();
		private $_stylesheets = array();
		private $_template_name;
		private $_template_data;
		private $_title_segments = array();
		private $_title_separator;
	
		public function __construct()
		{
			$this->_CI = &get_instance();
		
			$this->_CI->config->load('template', TRUE);
			$config_data = $this->_CI->config->item('template');
		
			foreach ($config_data as $key => $val)
			{
				$this->$key = $val;
			}
		}
	
		/**
		 * Adds a class to the body
		 *
		 * @param string body_class
		 * @author Zack Hovatter
		 */
		public function add_body_class($body_class)
		{
			$this->_body_classes[] = $body_class;
			return $this;
		}
	
		/**
		 * Add a javascript includeIf you specify external as true it will
		 * use a URL instead of looking in your assets folder.
		 *
		 * @param string $javascript_name
		 * @param bool $external 
		 */
		public function add_javascript($javascript_name, $external = FALSE)
		{
			$this->_javascripts[] = $external ? $javascript_name : base_url() . $this->_assets_dir . 'js/' . $javascript_name;
			return $this;
		}
	
		/**
		 * Add a stylesheet include. If you specify external as true it will
		 * use a URL instead of looking in your assets folder.
		 *
		 * @param string $stylesheet_name 
		 * @param string $media 
		 * @param bool $external 
		 */
		public function add_stylesheet($stylesheet_name, $media = 'screen', $external = FALSE)
		{
			$this->_stylesheets[] = array(
				'href' => $external ? $stylesheet_name : base_url() . $this->_assets_dir . 'css/' . $stylesheet_name,
				'media' => $media
			);
			return $this;
		}
	
		/**
		 * Adds a title segment
		 *
		 * @param string $segment 
		 */
		public function add_title_segment($segment)
		{
			$this->_title_segments[] = $segment;
			return $this;
		}
	
		/**
		 * Builds out the view
		 *
		 * @param string $view_name 
		 * @param array $view_data 
		 */
		public function build($view_name, $view_data = array())
		{
			$this->_template_data['title'] = $this->_base_title;
			if (count($this->_title_segments) > 0)
			{
				$this->_template_data['title'] .= $this->_title_separator . implode($this->_title_separator, $this->_title_segments);
			}
		
			$this->_template_data['stylesheets'] = '';
			foreach ($this->_stylesheets as $stylesheet)
			{
				$this->_template_data['stylesheets'] .= '<link href="' . $stylesheet['href'] . '" media="' . $stylesheet['media'] . '" rel="stylesheet" type="text/css" />' . "\r\n";
			}
		
			$this->_template_data['body_class'] = implode(' ', $this->_body_classes);
			$this->_template_data['content'] = $this->_CI->load->view($view_name, $view_data, TRUE);
		
			$this->_template_data['javascripts'] = '';
			foreach ($this->_javascripts as $javascript)
			{
				$this->_template_data['javascripts'] .= '<script src="' . $javascript . '" type="text/javascript"></script>' . "\r\n";
			}
		
			$this->_CI->load->view($this->_template_name, $this->_template_data);
		}
	
		/**
		 * Sets the base title
		 *
		 * @param string $base_title 
		 */
		public function set_base_title($base_title)
		{
			$this->_base_title = $base_title;
			return $this;
		}
	
		/**
		 * Sets the template file name
		 *
		 * @param string $template_name 
		 */
		public function set_template($template_name)
		{
			$this->_template_name = $template_name;
			return $this;
		}
	
		/**
		 * Sets the title separator
		 *
		 * @param string $title_separator 
		 */
		public function set_title_separator($title_separator)
		{
			$this->_title_separator = $title_separator;
			return $this;
		}
	
		/**
		 * Allows you to set a custom variable to be accessed in your template file.
		 *
		 * @param string $name 
		 * @param mixed $data 
		 */
		public function set_variable($name, $data)
		{
			$this->_template_data[$name] = $data;
			return $this;
		}
	}

config/template.php

	<?php if (!defined('BASEPATH')) exit('No direct script access allowed');

	// Default template view name
	$config['_template_name'] = '_template';

	// Default template view data
	$config['_template_data'] = array();

	// Assets dir with trailing slash /
	$config['_assets_dir'] = '_assets/';

	// Title
	$config['_base_title'] = 'example.com';

	// Title Separator
	$config['_title_separator'] = ' // ';